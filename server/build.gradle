/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'

    // Mongo plugin allows us to run a seperate instance of MongoDB for testing
    id 'com.sourcemuse.mongo' version '1.0.7'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Google core libraries for Java, various useful utilities
    implementation 'com.google.guava:guava:28.0-jre'

    // Spark web framework
    implementation 'com.sparkjava:spark-core:2.9.1'

    // Simple Logging Facade for Java
    implementation 'org.slf4j:slf4j-simple:1.7.26'

    // MongoDB driver
    implementation 'org.mongodb:mongodb-driver-sync:3.11.1'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

application {
    // Define the main class for the application
    mainClassName = 'umm3601.Server'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()

    runWithMongoDb = true

    mongo {
      port 'random'
      mongoVersion '3.4.23' // should match lab version
      //logging 'console'
    }

    systemProperty "test.mongo.port", project.mongo.port
}

